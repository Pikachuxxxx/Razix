<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Sce.Atf.Wpf.Docking"
    xmlns:vc="clr-namespace:Sce.Atf.Wpf.ValueConverters">
    
    <vc:NullVisibilityConverter x:Key="ConvertNullToVisibility"/>
    
    <DataTemplate x:Key="HeaderTemplate">
        <StackPanel Orientation="Horizontal">
            <Image Source="{Binding Path=Icon}" Width="16" Height="16" Margin="0,0,4,0" Visibility="{Binding Path=Icon, Converter={StaticResource ConvertNullToVisibility}}"/>
            <TextBlock Text="{Binding Path=Header}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ContentTemplate">
        <ContentControl Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=DataContext.Content}" DataContext="{x:Null}" />
    </DataTemplate>

    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextElement.Foreground" Value="#FF000000"/>
        <Setter Property="Control.Padding" Value="6,1,6,1"/>
        <Setter Property="Border.BorderBrush" Value="Silver"/>
        <Setter Property="Panel.Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=local:TabLayout}}"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border SnapsToDevicePixels="True">
                        <Grid Margin="0,0,1,0">
                            <Grid Name="Transform">
                                <Border CornerRadius="0" Background="White"/>
                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="LightGray" Name="Bd" />
                                <Border BorderThickness="1,1,1,0" CornerRadius="0,0,0,0" Name="HighlightBorder" Height="3" VerticalAlignment="Top" />
                            </Grid>
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}">
                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <!--Setter Property="Border.BorderBrush" TargetName="HighlightBorder" Value="#FFE68B2C"/-->
                            <!--Setter Property="Panel.Background" TargetName="HighlightBorder" Value="#FFFFC73C"/-->
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFECEBE6" Offset="1" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <!--<Setter Property="Border.BorderBrush" TargetName="HighlightBorder" Value="#FFE68B2C"/>
                            <Setter Property="Panel.Background" TargetName="HighlightBorder" Value="#FFFFC73C"/>-->
                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                            <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                            <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                            <Setter Property="FrameworkElement.LayoutTransform" TargetName="Transform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                            <Setter Property="Panel.Background" TargetName="Bd" Value="#FFF5F4EA"/>
                            <Setter Property="Border.BorderBrush" TargetName="Bd" Value="#FFC9C7BA"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:TabLayout}">
        <Setter Property="TabStripPlacement" Value="Bottom"/>
        <Setter Property="TextElement.Foreground" Value="{x:Static SystemColors.ControlTextBrush}"/>
        <!--Setter Property="Control.Padding" Value="0,1,0,0"/-->
        <Setter Property="Border.BorderBrush" Value="Silver"/>
        <!--Setter Property="Panel.Background" Value="#FFF9F9F9"/-->
        <Setter Property="Panel.Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=local:DockedWindow}}"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemStyle" Value="{StaticResource TabItemStyle}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource HeaderTemplate}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ContentTemplate}"/>
        <Setter Property="ItemsSource" Value="{Binding Children}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TabLayout}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="0,0,0,1" Background="{TemplateBinding Panel.Background}" Name="TabPanelBorder" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1" Margin="2,0,2,0">
                            <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="4,4,4,0" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" Background="Transparent"/>
                        </Border>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel" Value="4,0,4,4"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="TabPanelBorder" Value="2,0,2,0"/>
                            <Setter Property="Border.BorderThickness" TargetName="TabPanelBorder" Value="0,1,0,0"/>
                            <!--Setter Property="Control.Padding" Value="0,0,0,1"/-->
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel" Value="4,4,0,4"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="TabPanelBorder" Value="0,2,0,2"/>
                            <Setter Property="Border.BorderThickness" TargetName="TabPanelBorder" Value="0,0,1,0"/>
                            <!--Setter Property="Control.Padding" Value="1,0,0,0"/-->
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="TabPanelBorder" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="TabPanelBorder" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel" Value="0,4,4,4"/>
                            <Setter Property="FrameworkElement.Margin" TargetName="TabPanelBorder" Value="0,2,0,2"/>
                            <Setter Property="Border.BorderThickness" TargetName="TabPanelBorder" Value="1,0,0,0"/>
                            <!--Setter Property="Control.Padding" Value="0,0,1,0"/-->
                        </Trigger>
                        <Trigger Property="ItemsCount" Value="1">
                            <Setter Property="Border.BorderThickness" TargetName="TabPanelBorder" Value="0"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsCount" Value="1">
                            <Setter Property="Control.Padding" Value="0"/>
                            <Setter Property="Margin" Value="0" TargetName="HeaderPanel"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>