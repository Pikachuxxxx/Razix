//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VersionCheckerSoapBinding", Namespace="http://scea.com/tnt/versioncheck")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TNTWebServiceFault))]
    public partial class VersionCheckerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getPackageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHomePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLatestVersionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMappingPropertiesOperationCompleted;
        
        /// <remarks/>
        public VersionCheckerService() {
            Url = "http://www.ship.scea.com/portal/services/VersionChecker";
        }
        
        /// <remarks/>
        public event getPackageIdCompletedEventHandler getPackageIdCompleted;
        
        /// <remarks/>
        public event getHomePageCompletedEventHandler getHomePageCompleted;
        
        /// <remarks/>
        public event getLatestVersionInfoCompletedEventHandler getLatestVersionInfoCompleted;
        
        /// <remarks/>
        public event getMappingPropertiesCompletedEventHandler getMappingPropertiesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/versioncheck", ResponseNamespace="http://scea.com/tnt/versioncheck")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPackageIdReturn")]
        public string getPackageId(string shortcutName) {
            object[] results = Invoke("getPackageId", new object[] {
                        shortcutName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPackageId(string shortcutName, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("getPackageId", new object[] {
                        shortcutName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPackageId(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPackageIdAsync(string shortcutName) {
            getPackageIdAsync(shortcutName, null);
        }
        
        /// <remarks/>
        public void getPackageIdAsync(string shortcutName, object userState) {
            if ((getPackageIdOperationCompleted == null)) {
                getPackageIdOperationCompleted = new System.Threading.SendOrPostCallback(OngetPackageIdOperationCompleted);
            }
            InvokeAsync("getPackageId", new object[] {
                        shortcutName}, getPackageIdOperationCompleted, userState);
        }
        
        private void OngetPackageIdOperationCompleted(object arg) {
            if ((getPackageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                getPackageIdCompleted(this, new getPackageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/versioncheck", ResponseNamespace="http://scea.com/tnt/versioncheck")]
        [return: System.Xml.Serialization.SoapElementAttribute("getHomePageReturn")]
        public string getHomePage(string shortcutName) {
            object[] results = Invoke("getHomePage", new object[] {
                        shortcutName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetHomePage(string shortcutName, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("getHomePage", new object[] {
                        shortcutName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetHomePage(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getHomePageAsync(string shortcutName) {
            getHomePageAsync(shortcutName, null);
        }
        
        /// <remarks/>
        public void getHomePageAsync(string shortcutName, object userState) {
            if ((getHomePageOperationCompleted == null)) {
                getHomePageOperationCompleted = new System.Threading.SendOrPostCallback(OngetHomePageOperationCompleted);
            }
            InvokeAsync("getHomePage", new object[] {
                        shortcutName}, getHomePageOperationCompleted, userState);
        }
        
        private void OngetHomePageOperationCompleted(object arg) {
            if ((getHomePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                getHomePageCompleted(this, new getHomePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/versioncheck", ResponseNamespace="http://scea.com/tnt/versioncheck")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLatestVersionInfoReturn")]
        public object[] getLatestVersionInfo(string shortcutName) {
            object[] results = Invoke("getLatestVersionInfo", new object[] {
                        shortcutName});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLatestVersionInfo(string shortcutName, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("getLatestVersionInfo", new object[] {
                        shortcutName}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndgetLatestVersionInfo(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getLatestVersionInfoAsync(string shortcutName) {
            getLatestVersionInfoAsync(shortcutName, null);
        }
        
        /// <remarks/>
        public void getLatestVersionInfoAsync(string shortcutName, object userState) {
            if ((getLatestVersionInfoOperationCompleted == null)) {
                getLatestVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(OngetLatestVersionInfoOperationCompleted);
            }
            InvokeAsync("getLatestVersionInfo", new object[] {
                        shortcutName}, getLatestVersionInfoOperationCompleted, userState);
        }
        
        private void OngetLatestVersionInfoOperationCompleted(object arg) {
            if ((getLatestVersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                getLatestVersionInfoCompleted(this, new getLatestVersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/versioncheck", ResponseNamespace="http://scea.com/tnt/versioncheck")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMappingPropertiesReturn")]
        public object[] getMappingProperties(string shortcutName) {
            object[] results = Invoke("getMappingProperties", new object[] {
                        shortcutName});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMappingProperties(string shortcutName, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("getMappingProperties", new object[] {
                        shortcutName}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndgetMappingProperties(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getMappingPropertiesAsync(string shortcutName) {
            getMappingPropertiesAsync(shortcutName, null);
        }
        
        /// <remarks/>
        public void getMappingPropertiesAsync(string shortcutName, object userState) {
            if ((getMappingPropertiesOperationCompleted == null)) {
                getMappingPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(OngetMappingPropertiesOperationCompleted);
            }
            InvokeAsync("getMappingProperties", new object[] {
                        shortcutName}, getMappingPropertiesOperationCompleted, userState);
        }
        
        private void OngetMappingPropertiesOperationCompleted(object arg) {
            if ((getMappingPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                getMappingPropertiesCompleted(this, new getMappingPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GeneralSystemFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LoginFailedFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PermissionFault))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectNotFoundFault))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://faults.webservices.portal.ship.scea.com")]
    public abstract partial class TNTWebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://faults.webservices.portal.ship.scea.com")]
    public partial class GeneralSystemFault : TNTWebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://faults.webservices.portal.ship.scea.com")]
    public partial class LoginFailedFault : TNTWebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://faults.webservices.portal.ship.scea.com")]
    public partial class PermissionFault : TNTWebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://faults.webservices.portal.ship.scea.com")]
    public partial class ObjectNotFoundFault : TNTWebServiceFault {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getPackageIdCompletedEventHandler(object sender, getPackageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPackageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal getPackageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getHomePageCompletedEventHandler(object sender, getHomePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHomePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal getHomePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                RaiseExceptionIfNecessary();
                return ((string)(results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getLatestVersionInfoCompletedEventHandler(object sender, getLatestVersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLatestVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal getLatestVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                RaiseExceptionIfNecessary();
                return ((object[])(results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getMappingPropertiesCompletedEventHandler(object sender, getMappingPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMappingPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal getMappingPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                RaiseExceptionIfNecessary();
                return ((object[])(results[0]));
            }
        }
    }
}
