//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace Sce.Atf.Applications.WebServices.com.scea.ship.submitBug
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubmitBugSoapBinding", Namespace="http://scea.com/tnt/bugs")]
    public partial class BugReportingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback submitBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitBug1OperationCompleted;
        
        /// <remarks/>
        public BugReportingService() {
            Url = "http://www.ship.scea.com/portal/services/SubmitBug";
        }
        
        /// <remarks/>
        public event submitBugCompletedEventHandler submitBugCompleted;
        
        /// <remarks/>
        public event submitBug1CompletedEventHandler submitBug1Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/bugs", ResponseNamespace="http://scea.com/tnt/bugs")]
        [return: System.Xml.Serialization.SoapElementAttribute("submitBugReturn")]
        public bool submitBug(string shortcutName, string title, string description, int priority) {
            object[] results = Invoke("submitBug", new object[] {
                        shortcutName,
                        title,
                        description,
                        priority});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsubmitBug(string shortcutName, string title, string description, int priority, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("submitBug", new object[] {
                        shortcutName,
                        title,
                        description,
                        priority}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsubmitBug(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void submitBugAsync(string shortcutName, string title, string description, int priority) {
            submitBugAsync(shortcutName, title, description, priority, null);
        }
        
        /// <remarks/>
        public void submitBugAsync(string shortcutName, string title, string description, int priority, object userState) {
            if ((submitBugOperationCompleted == null)) {
                submitBugOperationCompleted = new System.Threading.SendOrPostCallback(OnsubmitBugOperationCompleted);
            }
            InvokeAsync("submitBug", new object[] {
                        shortcutName,
                        title,
                        description,
                        priority}, submitBugOperationCompleted, userState);
        }
        
        private void OnsubmitBugOperationCompleted(object arg) {
            if ((submitBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                submitBugCompleted(this, new submitBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="submitBug1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://scea.com/tnt/bugs", ResponseNamespace="http://scea.com/tnt/bugs")]
        [return: System.Xml.Serialization.SoapElementAttribute("submitBugReturn")]
        public bool submitBug(string shortcutName, string username, string password, string title, string description, int priority) {
            object[] results = Invoke("submitBug1", new object[] {
                        shortcutName,
                        username,
                        password,
                        title,
                        description,
                        priority});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsubmitBug1(string shortcutName, string username, string password, string title, string description, int priority, System.AsyncCallback callback, object asyncState) {
            return BeginInvoke("submitBug1", new object[] {
                        shortcutName,
                        username,
                        password,
                        title,
                        description,
                        priority}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsubmitBug1(System.IAsyncResult asyncResult) {
            object[] results = EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void submitBug1Async(string shortcutName, string username, string password, string title, string description, int priority) {
            submitBug1Async(shortcutName, username, password, title, description, priority, null);
        }
        
        /// <remarks/>
        public void submitBug1Async(string shortcutName, string username, string password, string title, string description, int priority, object userState) {
            if ((submitBug1OperationCompleted == null)) {
                submitBug1OperationCompleted = new System.Threading.SendOrPostCallback(OnsubmitBug1OperationCompleted);
            }
            InvokeAsync("submitBug1", new object[] {
                        shortcutName,
                        username,
                        password,
                        title,
                        description,
                        priority}, submitBug1OperationCompleted, userState);
        }
        
        private void OnsubmitBug1OperationCompleted(object arg) {
            if ((submitBug1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                submitBug1Completed(this, new submitBug1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void submitBugCompletedEventHandler(object sender, submitBugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal submitBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                RaiseExceptionIfNecessary();
                return ((bool)(results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void submitBug1CompletedEventHandler(object sender, submitBug1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitBug1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private readonly object[] results;
        
        internal submitBug1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                RaiseExceptionIfNecessary();
                return ((bool)(results[0]));
            }
        }
    }
}
