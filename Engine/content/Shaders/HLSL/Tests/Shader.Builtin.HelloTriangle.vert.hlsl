/*
 * Razix Engine HLSL Vertex Shader File
 * Vertex Shader that can be used for rendering a Hello Triangle for testing
 */
//------------------------------------------------------------------------------
#include "../../ShaderCommon/ShaderInclude.Builtin.ShaderLangCommon.h"
//------------------------------------------------------------------------------
// Vertex Input - Generated by VS
//------------------------------------------------------------------------------
struct VSOut
{
    float4 Position : SV_POSITION;
    float4 Color    : COLOR0;
    float2 UV       : TEXCOORD0;
};
//------------------------------------------------------------------------------
VSOut VS_MAIN(uint VertexIndex : SV_VertexID)
{
    VSOut vso;

    // Define the triangle vertices in normalized device coordinates (NDC)
     float2 positions[3] = {
        float2(-0.5f, -0.5f),
        float2( 0.0f,  0.5f),
        float2( 0.5f, -0.5f)
    };

    // Define the colors for each vertex (RGB)
    float4 colors[3] = {
        float4(1.0f, 0.0f, 0.0f, 1.0f), // Red
        float4(0.0f, 1.0f, 0.0f, 1.0f), // Green
        float4(0.0f, 0.0f, 1.0f, 1.0f)  // Blue
    };

    // https://learn.microsoft.com/en-us/windows/win32/direct3d9/texture-coordinates
    // top-left     : (0, 0)
    // bottom-right : (1, 1)
    float2 uv[3] = {
        float2(0.0f, 1.0f),
        float2(0.5f, 0.0f),
        float2(1.0f, 1.0f) 
    };

    vso.Position = float4(positions[VertexIndex], 0.0f, 1.0f);
    vso.Color = colors[VertexIndex];
    vso.UV = uv[VertexIndex];

    return vso;
}
