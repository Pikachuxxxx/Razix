name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Razix Engine ${{ github.ref }}
        body: |
          Razix Engine Release ${{ github.ref }}
          
          ## Build Artifacts
          - Windows (GoldMaster): razix-windows-goldmaster.zip
          - macOS (GoldMaster): razix-macos-goldmaster.zip
          
          ## Changes
          See the commit history for detailed changes in this release.
        draft: false
        prerelease: false

  build-windows:
    needs: create-release
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Setup Visual Studio
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64
    
    - name: Add MSBuild to PATH
      run: |
        $msbuildPath = "${env:ProgramFiles}\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin"
        if (-not (Test-Path $msbuildPath)) {
          $msbuildPath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin"
        }
        if (-not (Test-Path $msbuildPath)) {
          $msbuildPath = "${env:ProgramFiles}\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin"
        }
        if (Test-Path $msbuildPath) {
          echo $msbuildPath | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "MSBuild path added: $msbuildPath"
        } else {
          echo "MSBuild not found in expected locations"
          exit 1
        }
      shell: powershell
    
    - name: Cache Vulkan SDK
      uses: actions/cache@v4
      id: cache-vulkan-windows
      with:
        path: |
          C:\VulkanSDK
        key: vulkan-sdk-windows-1.3.243.0
    
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.1
      with:
        vulkan-query-version: 1.3.243.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    
    - name: Generate Project Files
      run: |
        cd Scripts
        .\GenerateVS22.bat
      shell: cmd
    
    - name: Build Engine (GoldMaster)
      run: |
        cd Scripts
        python build_razix.py --platform windows --config GoldMaster --github-ci
      shell: cmd
    
    - name: Package Windows Build
      run: |
        7z a razix-windows-goldmaster.zip bin/GoldMaster-windows-x64/**/*
      shell: cmd
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./razix-windows-goldmaster.zip
        asset_name: razix-windows-goldmaster.zip
        asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install Xcode Command Line Tools
      run: |
        # Ensure Xcode command line tools are installed
        xcode-select --install || true
        # Accept Xcode license
        sudo xcodebuild -license accept || true
    
    - name: Cache Vulkan SDK
      uses: actions/cache@v4
      id: cache-vulkan-macos
      with:
        path: |
          /usr/local/share/vulkan
        key: vulkan-sdk-macos-1.3.243.0
    
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.1
      with:
        vulkan-query-version: 1.3.243.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    
    - name: Generate Project Files
      run: |
        chmod +x ./Scripts/GenerateXCodeProjectsMacOS.sh
        ./Scripts/GenerateXCodeProjectsMacOS.sh
    
    - name: Build Engine (GoldMaster)
      run: |
        python Scripts/build_razix.py --platform macos --config GoldMaster
    
    - name: Package macOS Build
      run: |
        zip -r razix-macos-goldmaster.zip bin/GoldMaster-macosx-ARM64/
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./razix-macos-goldmaster.zip
        asset_name: razix-macos-goldmaster.zip
        asset_content_type: application/zip